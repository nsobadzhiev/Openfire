# syntax = docker/dockerfile:1.0-experimental
FROM amazon/aws-cli as aws
# download push notification credentials from S3
RUN --mount=type=secret,id=aws,target=/root/.aws/credentials aws s3 cp s3://com.feinfone.build/apns/apns_key.p8 /usr/local/openfire/authKey.p8

#ARG KEYSTORE_PASS=testpass
#ARG KEYSTORE_ALIAS="feinfone.com"

# Maven target to get all dependencies and build
FROM maven:3.6.2-jdk-11 as packager

# define the build arguments
ARG VERSION_DBACCESS=1.2.2
ARG VERSION_REGISTRATION=1.7.2
ARG VERSION_RESTAPI=1.4.0
ARG VERSION_SUBSCRIPTION=1.4.0

ARG KEYSTORE_PWD=testpass

WORKDIR /usr/src

COPY Openfire/pom.xml .
COPY Openfire/i18n/pom.xml ./i18n/
COPY Openfire/xmppserver/pom.xml ./xmppserver/
COPY Openfire/starter/pom.xml ./starter/
COPY Openfire/starter/libs/* ./starter/libs/
COPY Openfire/plugins/pom.xml ./plugins/
COPY Openfire/plugins/openfire-plugin-assembly-descriptor/pom.xml ./plugins/openfire-plugin-assembly-descriptor/
COPY Openfire/distribution/pom.xml ./distribution/

WORKDIR ca
# create self signed certificate and add it to a PKCS12 keystore
RUN keytool -genkeypair \
        -keystore keystore.p12 \
        -deststoretype pkcs12 \
        -dname "CN=feinfone.com" \
        -keypass ${KEYSTORE_PWD} \
        -storepass ${KEYSTORE_PWD} \
        -keyalg RSA \
        -validity 365 \
        -keysize 4096 \
        -alias feinfone.com \
        # multi domain certificate part
        -ext SAN=dns:feinfone.com,dns:search.feinfone.com,dns:proxy.feinfone.com,dns:pubsub.feinfone.com,dns:conference.feinfone.com,dns:group-chat.feinfone.com \
    # to add another certificate to the same keystore just copy paste the previous command again with a different alias
    # Convert PKCS12 keystore to a JKS keystore which Openfire understands
    && keytool -importkeystore \
               -srckeystore keystore.p12 \
               -srcstoretype PKCS12 \
               -srcstorepass ${KEYSTORE_PWD} \
               -destkeystore keystore \
               -deststorepass ${KEYSTORE_PWD}

WORKDIR /usr/src
# get all necessary plugins
# 1. official plugins
# DB Access
RUN wget https://www.igniterealtime.org/projects/openfire/plugins/${VERSION_DBACCESS}/dbaccess.jar -O ./plugins/dbaccess.jar \
# Registration
 && wget https://www.igniterealtime.org/projects/openfire/plugins/${VERSION_REGISTRATION}/registration.jar -O ./plugins/registration.jar \
# REST API
 && wget https://www.igniterealtime.org/projects/openfire/plugins/${VERSION_RESTAPI}/restAPI.jar -O ./plugins/restAPI.jar \
# Subscription
 && wget https://www.igniterealtime.org/projects/openfire/plugins/${VERSION_SUBSCRIPTION}/subscription.jar -O ./plugins/subscription.jar \

# 2. take all plugins developed by us from the parent directory
COPY ./openfire-apns ./plugins/openfire-apns
COPY ./openfire-voice-plugin ./plugins/openfire-voice-plugin
COPY ./openfire-avatar-upload-plugin ./plugins/openfire-avatar-upload-plugin
COPY ./openfire-hazelcast-plugin ./plugins/openfire-hazelcast-plugin
# add new plugins here

RUN mvn dependency:go-offline

COPY Openfire .
RUN mvn package

# build target
FROM openjdk:11-jre-slim as build
WORKDIR /usr/local/openfire
COPY --from=packager /usr/src/distribution/target/distribution-base .
COPY --from=packager /usr/src/build/docker/entrypoint_local.sh /sbin/entrypoint.sh

COPY Openfire/build/docker/inject_db_settings.sh \
     Openfire/build/docker/inject_hazelcast_settings.sh \
     Openfire/build/docker/template_openfire.xml \
     Openfire/build/docker/template_hazelcast.xml \
     Openfire/build/docker/template_security.xml \
     ./

# copy push notification credentials
COPY --from=aws /usr/local/openfire/authKey.p8 .

# copy keystore with self signed certificate
COPY --from=packager /usr/src/ca/keystore ./resources/security/

# (move all plugin JARs to the plugin folder)
COPY --from=packager /usr/src/plugins/openfire-avatar-upload-plugin/target/avatarupload-0.0.1-SNAPSHOT.jar \
    /usr/src/plugins/openfire-voice-plugin/target/voice-0.0.11-SNAPSHOT.jar \
    /usr/src/plugins/openfire-apns/target/openfire-apns.jar \
    # add new plugins here
    /usr/src/plugins/openfire-hazelcast-plugin/target/hazelcast-2.4.2-SNAPSHOT.jar ./plugins/

ENV OPENFIRE_USER=openfire \
    OPENFIRE_DIR=/usr/local/openfire \
    OPENFIRE_DATA_DIR=/var/lib/openfire \
    OPENFIRE_LOG_DIR=/var/log/openfire

RUN apt-get update -qq --allow-releaseinfo-change \
    && apt-get install -yqq sudo \
    && adduser --disabled-password --quiet --system --home $OPENFIRE_DATA_DIR --gecos "Openfire XMPP server" --group openfire \
    && chmod 755 /sbin/entrypoint.sh \
    && chown -R openfire:openfire ${OPENFIRE_DIR} \
    && mv ${OPENFIRE_DIR}/conf ${OPENFIRE_DIR}/conf_org \
    && mv ${OPENFIRE_DIR}/plugins ${OPENFIRE_DIR}/plugins_org \
    && mv ${OPENFIRE_DIR}/resources/security ${OPENFIRE_DIR}/resources/security_org \
    && rm -rf /var/lib/apt/lists/*

LABEL maintainer="florian.kinder@fankserver.com"

EXPOSE 5005 3478/tcp 3479/tcp 5222/tcp 5223/tcp 5229/tcp 5275/tcp 5276/tcp 5262/tcp 5263/tcp 5701/tcp 7070/tcp 7443/tcp 7777/tcp 9090/tcp 9091/tcp
VOLUME ["${OPENFIRE_DATA_DIR}"]
ENTRYPOINT ["/sbin/entrypoint.sh"]
