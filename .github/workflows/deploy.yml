# Continuous Deployment workflow
name: CD

# runs on push on the main branches
on:
  push:
    tags:
      - '*'
    branches:
      - master
      - main

# one job and step to deploy
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        aws_region: [ eu-central-1 ]
        aws_repo: [ feinfone ]
    # set the AWS token to access the S3 bucket for the maven repository
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2

      # set environment variable from pushed tag
      - name: Set env.RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # build docker image
      - name: Docker build
        run: |
          docker build --build-arg AWS_REGION=${{ matrix.aws_region }} --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} --build-arg KEYSTORE_PWD=${{ secrets.KEYSTORE_PWD }} -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ matrix.aws_region }}.amazonaws.com/${{ matrix.aws_repo }}:${{ env.RELEASE_VERSION }} .

      # deploy docker image on AWS
      - name: AWS ECR deploy
        run: |
          aws ecr get-login-password --region ${{ matrix.aws_region }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ matrix.aws_region }}.amazonaws.com/${{ matrix.aws_repo }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ matrix.aws_region }}.amazonaws.com/${{ matrix.aws_repo }}:${{ env.RELEASE_VERSION }}

      # TODO find a way to use terraform here
